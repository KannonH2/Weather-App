{"version":3,"sources":["Images/logo.png","components/SearchBar.jsx","components/Nav.jsx","components/Card.jsx","components/Cards.jsx","components/City.jsx","containers/App.js","index.js"],"names":["SearchBar","onSearch","useState","city","setCity","onSubmit","e","preventDefault","className","type","placeholder","value","onChange","target","Nav","to","id","src","Logo","width","height","alt","Card","props","min","max","name","img","onClose","primary","onClick","style","display","textDecoration","Temp","label","temp","Cards","cities","map","c","City","weather","wind","clouds","latitud","longitud","App","setCities","oldCities","filter","ciudad","fetch","then","r","json","recurso","undefined","main","Math","round","temp_min","temp_max","icon","speed","all","coord","lat","lon","alert","onFilter","ciudadId","parseInt","length","path","render","exact","match","params","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3a1cbd39.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6dc21615.png\";","import React, { useState } from \"react\";\nimport './SearchBar.css';\n\nexport default function SearchBar({onSearch}) {\n  const [city, setCity] = useState(\"\");\n  return (\n    <form onSubmit={(e) => {\n      e.preventDefault();\n      onSearch(city);\n    }}>\n    <div className=\"search\">\n      <input\n        className=\"input\"\n        type=\"text\"\n        placeholder=\"Agregar Ciudad...\"\n        value={city}\n        onChange={e => setCity(e.target.value)}\n      />\n      {/* <input type=\"submit\" value=\"Agregar\" /> */}\n      <button className=\"btn btn-success\" type=\"submit\">Agregar</button>\n      </div>\n    </form>\n  );\n}\n","import React from 'react';\nimport Logo from '../Images/logo.png'\nimport SearchBar from './SearchBar.jsx';\nimport './Nav.css';\n//importo Link\nimport { Link } from \"react-router-dom\"\n//dentro del componente hago los linkeos necesarios.\n\n\nfunction Nav({onSearch}) {\n  return (\n    <nav className=\"navbar navbar-dark bg-dark\">\n      <Link to='/'>\n        <span className=\"navbar-brand\">\n          <img id=\"logoHenry\" src={Logo} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"\" />\n          Fer-Dev - Weather App\n        </span>\n      </Link>\n        <SearchBar\n          onSearch={onSearch}\n        />\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\nimport './Card.css';\nimport { Link } from 'react-router-dom';\n\nexport default function Card(props) {\n\n  const { min, max, name, img, onClose, id } = props;\n\n  return (\n    <div className={`${\"card\"} ${props.primary ? \"primary\" : \"\"}`}>\n      <div>\n        <button onClick={onClose} style={{ display: 'none' }}>X</button>\n      </div>\n      <Link to={`/ciudad/${id}`}>\n        <h5 className=\"name\" style={{ textDecoration: 'underline' }}>{name}</h5>\n      </Link>\n      <img className=\"iconoClima\" src={\"http://openweathermap.org/img/wn/\" + img + \"@2x.png\"} alt={name} />\n      <div className=\"temps\">\n        <Temp label=\"Min\" temp={min} />\n        <Temp label=\"Max\" temp={max} />\n      </div>\n    </div>\n  );\n};\n\n// Deberia estar en un archivo aparte\nfunction Temp({ label, temp }) {\n  return (\n    <div className=\"temp\">\n      <span>{label}</span>\n      <span>{temp}°</span>\n    </div>\n  );\n};\n","import React from 'react';\nimport './Cards.css';\nimport Card from './Card.jsx';\n\nexport default function Cards({cities, onClose}) {\n  return (\n    <div className='cards'>\n      {cities.map(c => <Card\n          key={c.id}\n          id={c.id}\n          max={c.max}\n          min={c.min}\n          name={c.name}\n          img={c.img}\n          onClose={() => onClose(c.id)}\n        /> )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./City.css\"\n//creo el componente funcional City que mostrará los detalles de una ciudad\n//recibida por props en la ruta /ciudad/{ciudadId}\nexport default function City({ city }){\n    return(\n        <div className=\"main\">\n            <h2 className=\"detailName\">{city.name}</h2>\n            <div className=\"sub-main\">\n                <div className=\"description\">Temperatura: {city.temp}°</div>\n                <div className=\"description\">Clima: {city.weather}</div>\n                <div className=\"description\">Viento: {city.wind} Km/h</div>\n                <div className=\"description\">Nubosidad: {city.clouds}</div>\n                <div className=\"description\">Latitud: {city.latitud}</div>\n                <div className=\"description\">Longitud: {city.longitud}</div>\n            </div>\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport './App.css';\nimport Nav from '../components/Nav.jsx';\nimport Cards from '../components/Cards.jsx';\nimport City from '../components/City';\nimport { Route } from 'react-router-dom';\n\nconst apiKey = '4ae2636d8dfbdc3044bede63951a019b';\n\nfunction App() {\n  const [cities, setCities] = useState([]);\n  function onClose(id) {\n    setCities(oldCities => oldCities.filter(c => c.id !== id));\n  }\n  function onSearch(ciudad) {\n    //Llamado a la API del clima\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&units=metric&appid=${apiKey}`)\n      .then(r => r.json())\n      .then((recurso) => {\n        if (recurso.main !== undefined) {\n          const ciudad = {\n            min: Math.round(recurso.main.temp_min),\n            max: Math.round(recurso.main.temp_max),\n            img: recurso.weather[0].icon,\n            id: recurso.id,\n            wind: recurso.wind.speed,\n            temp: recurso.main.temp,\n            name: recurso.name,\n            weather: recurso.weather[0].main,\n            clouds: recurso.clouds.all,\n            latitud: recurso.coord.lat,\n            longitud: recurso.coord.lon\n          };\n          setCities(oldCities => [...oldCities, ciudad]);\n        } else {\n          alert(\"Ciudad no encontrada\");\n        }\n      });\n  }\n  function onFilter(ciudadId) {\n    let ciudad = cities.filter(c => c.id === parseInt(ciudadId));\n    if (ciudad.length > 0) {\n      return ciudad[0];\n    } else {\n      return null;\n    }\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"background\" />\n      <div className=\"Nav\">\n        <Route path='/' render={() => <Nav onSearch={onSearch} />} />\n      </div>\n      <div className=\"container\">\n          <Route exact path='/ciudad/:ciudadId'\n            render={({ match }) => (<City city={onFilter(match.params.ciudadId)} />)} />\n        <div className=\"PrimaryCard\" >\n        </div>\n        <div className=\"CityCard\" >\n          \n          <Route exact path='/' render={() => <Cards cities={cities} onClose={onClose} />} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}